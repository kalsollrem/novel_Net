<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.project.novelnet.repository.MasterMapper">
    <resultMap type="HashMap" id="NovelShingoMap">
        <id column="mw_num"  property="mw_num"/>
        <id column="n_num"   property="n_num"/>
        <id column="m_num"   property="m_num"/>
        <id column="u_num"   property="u_num"/>
        <id column="nick"    property="nick"/>
        <id column="w_why"   property="w_why"/>
        <id column="mw_date" property="mw_date"/>
        <id column="b_stop"  property="b_stop"/>
        <id column="n_title" property="n_title"/>
        <id column="m_title" property="m_title"/>
        <id column="wNick"   property="wNick"/>
        <id column="U_LEVEL" property="U_LEVEL"/>
        <id column="wU_num"  property="wU_num"/>
        <id column="wU_mail"  property="wU_mail"/>
    </resultMap>

    <resultMap type="HashMap" id="ReplyShingoMap">
        <id column="rw_num"   property="rw_num"/>
        <id column="r_num"    property="r_num"/>
        <id column="nick"     property="nick"/>
        <id column="r_memo"   property="r_memo"/>
        <id column="r_date"   property="r_date"/>
        <id column="r_bad"    property="r_bad"/>
        <id column="r_state"  property="r_state"/>
        <id column="u_num"    property="u_num"/>
        <id column="wNick"    property="wNick"/>
        <id column="wU_num"   property="wU_num"/>
        <id column="wU_mail"  property="wU_mail"/>
        <id column="U_LEVEL"  property="U_LEVEL"/>
        <id column="m_num"    property="m_num"/>
        <id column="n_num"    property="n_num"/>
        <id column="n_title"  property="n_title"/>
        <id column="m_title"  property="m_title"/>
    </resultMap>

    <!--resultType이 아니라 resultMap을 사용해 연동 -->
    <!--신고당한 소설 리스트 -->
    <select id="novelShingo" resultType="com.project.novelnet.Vo.MasterVO.MasterNovel">
        SELECT A.mw_num, A.n_num, A.m_num, A.u_num, E.nick, A.w_why, date_format(A.mw_date, '%y. %m. %d. (%H:%i)')as mw_date,
               F.b_stop, C.n_title, B.m_title,
               D.U_NUM as wU_num, D.wNick, D.U_LEVEL ,D.wU_mail
        FROM m_warning A
        left join (select m_num, m_title from memo) B
        on A.m_num = B.m_num
        left join (select n_title, n_num, u_num as writter from novel)C
        on A.n_num = c.n_num
        LEFT JOIN (SELECT U_NUM, U_NICK as wNick, u_mail as wU_mail, U_LEVEL from user) D
        ON c.writter = D.u_num
        LEFT JOIN (SELECT U_NUM, ifnull(u_nick, u_mail) as nick from user) E
        ON A.u_num = E.u_num
        LEFT JOIN (SELECT m_num, count(mw_num) as b_stop from m_warning group by m_num) F
        ON A.m_num = F.m_num
        <choose>
            <when test="searchType.equals('nick')">
                WHERE E.nick like CONCAT('%',#{keyword},'%')
            </when>
            <when test="searchType.equals('title')">
                WHERE C.n_title like CONCAT('%',#{keyword},'%')
            </when>
            <when test="searchType.equals('wNick')">
                WHERE D.wNick like CONCAT('%',#{keyword},'%')
            </when>
            <when test="searchType.equals('novelNum')">
                WHERE A.n_num = #{keyword}
            </when>
        </choose>
        ORDER BY mw_date DESC
        Limit #{start},10
    </select>


    <select id="novelShingoCnt" resultType="int">
        SELECT count(A.mw_num) as cnt
        FROM m_warning A
        left join (select m_num, m_title from memo) B
        on A.m_num = B.m_num
        left join (select n_title, n_num, u_num as writter from novel)C
        on A.n_num = c.n_num
        LEFT JOIN (SELECT U_NUM, U_NICK as wNick, u_mail as wU_mail, U_LEVEL from user) D
        ON c.writter = D.u_num
        LEFT JOIN (SELECT U_NUM, ifnull(u_nick, u_mail) as nick from user) E
        ON A.u_num = E.u_num
        LEFT JOIN (SELECT m_num, count(mw_num) as b_stop from m_warning group by m_num) F
        ON A.m_num = F.m_num
        <choose>
            <when test="searchType.equals('nick')">
                WHERE E.nick like CONCAT('%',#{keyword},'%')
            </when>
            <when test="searchType.equals('title')">
                WHERE C.n_title like CONCAT('%',#{keyword},'%')
            </when>
            <when test="searchType.equals('wNick')">
                WHERE D.wNick like CONCAT('%',#{keyword},'%')
            </when>
            <when test="searchType.equals('novelNum')">
                WHERE A.n_num = #{keyword}
            </when>
        </choose>
    </select>


    <select id="replyShingo" resultType="com.project.novelnet.Vo.MasterVO.MasterReply">
        select A.rw_num, A.r_num, UB.nick,
               B.r_memo, B.r_date, B.r_bad, B.r_state, B.u_num, UA.wNick, UA.wU_mail, UA.U_LEVEL, UA.U_NUM as wU_num,
               C.m_num, C.m_title,
               D.n_num, D.n_title
        from (select rw_num, r_num, u_num from r_warning)A
        left join (select r_num, u_num, r_memo, m_num, n_num, r_date, r_bad, r_state from reply) b
               on A.r_num = B.r_num
        left join (select m_num, m_title from memo)C
               on C.m_num = B.m_num
        left join (select n_title, n_num from novel)D
               on B.n_num = D.n_num
        LEFT JOIN (SELECT U_NUM, U_NICK as wNick, u_mail as wU_mail, U_LEVEL from user) UA
               ON b.u_num = UA.u_num
        LEFT JOIN (SELECT U_NUM, ifnull(u_nick, u_mail) as nick from user) UB
               ON a.u_num = UB.u_num
        where UA.u_num is not null and A.r_num != 'none'
        <choose>
            <when test="searchType.equals('nick')">
                WHERE UB.nick like CONCAT('%',#{keyword},'%')
            </when>
            <when test="searchType.equals('title')">
                WHERE D.n_title like CONCAT('%',#{keyword},'%')
            </when>
            <when test="searchType.equals('wNick')">
                WHERE UA.wNick like CONCAT('%',#{keyword},'%')
            </when>
            <when test="searchType.equals('novelNum')">
                WHERE D.n_num = #{keyword}
            </when>
        </choose>
        ORDER BY r_date DESC
        Limit #{start},10
    </select>


    <select id="replyShingoCnt" resultType="int">
        SELECT count(A.rw_num) as cnt
        from (select rw_num, r_num, u_num from r_warning)A
        left join (select r_num, u_num, r_memo, m_num, n_num, r_date, r_bad, r_state from reply) b
               on A.r_num = B.r_num
        left join (select m_num, m_title from memo)C
               on C.m_num = B.m_num
        left join (select n_title, n_num from novel)D
               on B.n_num = D.n_num
        LEFT JOIN (SELECT U_NUM, U_NICK as wNick, u_mail as wU_mail, U_LEVEL from user) UA
               ON b.u_num = UA.u_num
        LEFT JOIN (SELECT U_NUM, ifnull(u_nick, u_mail) as nick from user) UB
               ON a.u_num = UB.u_num
        where UA.u_num is not null and A.r_num != 'none'
        <choose>
            <when test="searchType.equals('nick')">
                WHERE UB.nick like CONCAT('%',#{keyword},'%')
            </when>
            <when test="searchType.equals('title')">
                WHERE D.n_title like CONCAT('%',#{keyword},'%')
            </when>
            <when test="searchType.equals('wNick')">
                WHERE UA.wNick like CONCAT('%',#{keyword},'%')
            </when>
            <when test="searchType.equals('novelNum')">
                WHERE D.n_num = #{keyword}
            </when>
        </choose>
    </select>


</mapper>

